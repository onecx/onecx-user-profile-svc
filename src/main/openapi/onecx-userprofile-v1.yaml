---
openapi: 3.0.3
info:
  title: onecx-user-profile external service V1
  description: This API provides endpoints to manage the user profile of the requesting user
  version: 1.0.0
servers:
  - url: "http://onecx-user-profile:8080"
tags:
  - name: userProfileV1
    description: Managing user profile by the requesting user
paths:
  /v1/userProfile/me:
    get:
      security:
        - oauth2: [ ocx-up:read ]
      tags:
        - userProfileV1
      description: Load the user profile of the requesting user
      operationId: getUserProfile
      responses:
        "200":
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /v1/userProfile/me/preferences:
    get:
      security:
        - oauth2: [ ocx-up:read ]
      tags:
        - userProfileV1
      description: Load user preferences for the requesting user
      operationId: getUserPreference
      responses:
        "200":
          description: User profile preferences retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreferences'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /v1/userProfile/me/person:
    get:
      security:
        - oauth2: [ ocx-up:read ]
      tags:
        - userProfileV1
      description: Get user person for the requesting user
      operationId: getUserPerson
      responses:
        "200":
          description: User person retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPerson'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /v1/userProfile/me/settings:
    get:
      security:
        - oauth2: [ ocx-up:read ]
      tags:
        - userProfileV1
      description: Load user profile account settings for the requesting user
      operationId: getUserSettings
      responses:
        "200":
          description: User profile account settings retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileAccountSettings'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://oauth.simple.api/token
          scopes:
            ocx-up:read: Grants read access
  schemas:
    UserPreferences:
      type: object
      properties:
        preferences:
          items:
            $ref: '#/components/schemas/UserPreference'
    UserPreference:
      type: object
      properties:
        id:
          type: string
        applicationId:
          type: string
        name:
          type: string
        description:
          type: string
        value:
          type: string
    UserProfile:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        identityProvider:
          type: string
        identityProviderId:
          type: string
        issuer:
          type: string
        organization:
          type: string
        tenantId:
          type: string
        person:
          $ref: '#/components/schemas/UserPerson'
        accountSettings:
          $ref: '#/components/schemas/UserProfileAccountSettings'
        settings:
          type: object
    UserPerson:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        displayName:
          type: string
        email:
          type: string
        address:
          $ref: '#/components/schemas/UserPersonAddress'
        phone:
          $ref: '#/components/schemas/UserPersonPhone'
    UserPersonAddress:
      type: object
      properties:
        street:
          type: string
        streetNo:
          type: string
        city:
          type: string
        country:
          type: string
        postalCode:
          type: string
    UserPersonPhone:
      type: object
      properties:
        number:
          type: string
        type:
          $ref: '#/components/schemas/PhoneType'
    PhoneType:
      enum:
        - MOBILE
        - LANDLINE
      type: string
    UpdateUserPerson:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        displayName:
          type: string
        email:
          type: string
        address:
          $ref: '#/components/schemas/UserPersonAddress'
        phone:
          $ref: '#/components/schemas/UserPersonPhone'
    UserProfileAccountSettings:
      type: object
      properties:
        hideMyProfile:
          type: boolean
        locale:
          type: string
        timezone:
          type: string
        menuMode:
          $ref: '#/components/schemas/MenuMode'
        colorScheme:
          $ref: '#/components/schemas/ColorScheme'
    MenuMode:
      enum:
        - STATIC
        - HORIZONTAL
        - OVERLAY
        - SLIM
        - SLIMPLUS
      type: string
    ColorScheme:
      enum:
        - AUTO
        - LIGHT
        - DARK
      type: string
    ImageInfo:
      type: object
      properties:
        id:
          type: string
    ProblemDetailResponse:
      type: object
      properties:
        errorCode:
          type: string
        detail:
          type: string
        params:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailParam'
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailInvalidParam'
    ProblemDetailParam:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ProblemDetailInvalidParam:
      type: object
      properties:
        name:
          type: string
        message:
          type: string
    OffsetDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50-04:00
  parameters:
    id:
      in: path
      name: id
      required: true
      schema:
        type: string


